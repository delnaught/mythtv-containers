---

name: Deliver Image Gaps

on: push

jobs:
  query-ppa:
    runs-on: ubuntu-latest
    outputs:
      build-matrix: ${{ steps.query.outputs.build-matrix }}
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - id: query
        uses: ./.github/actions/mythtv-matrix-action
        with:
          image-names: "[\"delnaught/mythtv-backend\", \"delnaught/mythtv-database\"]"
          ppa-names: "[\"31\", \"32\"]"
          record-count: 30
          
  build-images:
    runs-on: ubuntu-latest
    needs:
      - query-ppa
    strategy:
      matrix:
        include: ${{ fromJson(needs.query-ppa.outputs.build-matrix) }}
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - id: build-tag-set
        run: |
          tag_commit=${{matrix.commit}}
          tag_full=${{matrix.major}}.${{matrix.minor}}.${{matrix.date}}-${{matrix.commit}}
          tag_minor=${tag_full%.*}
          tag_major=${tag_minor%.*}
          if [[ "0" == ${{ matrix.index }} ]]; then
          echo "::set-output name=tags::${tag_commit},${tag_full},${tag_minor},${tag_major},latest"
          else
          echo "::set-output name=tags::${tag_commit},${tag_full}"
          fi
      - id: query-backend-image
        uses: ./.github/actions/dockerhub-present-action
        with:
          image-name: ${{ matrix.image }}
          image-tag: ${{matrix.commit}}
      - id: docker-auth
        if: ${{ steps.query-backend-image.outputs.http-code == '404' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: build-push-backend
        if: ${{ contains(matrix.image, 'backend') }}
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/mythtv-backend.dockerfile
          build-args: |
            FROM_IMAGE: ubuntu:focal
            MYTHTV_VERSION=${{ matrix.source }}
          labels: |
            mythtv.source_package_version=${{ matrix.source }}
          tags: ${{ steps.build-tag-set.outputs.tags }}
      - id: build-push-database
        if: ${{ contains(matrix.image, 'database') }}
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/mythtv-database.dockerfile
          build-args: |
            BUILDER_IMAGE=ubuntu:focal
            RUNTIME_IMAGE=mariadb:10.3-focal
            MYTHTV_VERSION=${{ matrix.source }}
          labels: |
            mythtv.source_package_version=${{ matrix.source }}
          tags: ${{ steps.build-tag-set.outputs.tags }}
