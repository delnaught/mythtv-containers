---

name: get-version-skew

on:
  workflow_call:
    inputs:
      ppa:
        description: 'json array of versions available in the ppa'
        required: true
        type: string
      meta:
        description: 'reference image metadata'
        required: true
        type: string
    outputs:
      matrix:
        description: 'json array of versions to be delivered'
        value: ${{ jobs.parse.outputs.slice }}
      length:
        description: 'length of matrix array'
        value: ${{ jobs.parse.outputs.length }}
        
jobs:
  parse:
    runs-on: ubuntu-latest
    outputs:
      slice: ${{ steps.parse-skew.outputs.slice }}
      length: ${{ steps.parse-skew.outputs.length }}
    steps:
      - id: parse-skew
        run: |
          slice='${{ inputs.ppa }}'
          image_version=$(echo '${{ inputs.meta  }}' | jq -r '.config.Labels."mythtv.source_package_version"')
          ppa_index=$(echo $slice | jq --arg ref $image_version -r '. | index($ref)')
          if [[ 'null' != $ppa_index ]]; then
          slice=$(echo $slice | jq --arg eidx $ppa_index -r '.[0:($eidx | tonumber)]')
          fi
          length=$(echo $slice | jq -r '. | length')
          echo "::set-output name=slice::${slice} name=length=${length}"
